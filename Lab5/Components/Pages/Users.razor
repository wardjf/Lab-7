@page "/users"
@inject ILibraryService LibraryService
@using Lab5.Models


<h3>Users</h3>

<!-- Add User Button -->
<button class="btn btn-primary" @onclick="ToggleAddForm">Add User</button>

@if (isAddFormVisible)
{
    <!-- Add User Form (Visible only when 'Add User' is pressed) -->
    <div>
        <h4>Add User</h4>
        <div>
            <label>Name:</label>
            <input type="text" @bind="newUser.Name" class="form-control" />
        </div>
        <div>
            <label>Email:</label>
            <input type="text" @bind="newUser.Email" class="form-control" />
        </div>
        <div>
            <button class="btn btn-success" @onclick="AddUser">Add User</button>
            <button class="btn btn-secondary" @onclick="CancelAddUser">Cancel</button>
        </div>
    </div>
}

@if (users == null || !users.Any())
{
    <p>No users available.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>
                        <button class="btn btn-primary" @onclick="() => StartEditingUser(user)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button>
                    </td>
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                </tr>

                <!-- Edit Form for the selected user, appearing below the user row -->
                @if (editingUser?.Id == user.Id)
                {
                    <tr>
                        <td colspan="3">
                            <h5>Edit User</h5>
                            <div>
                                <label>Name:</label>
                                <input type="text" @bind="newUser.Name" class="form-control" />
                            </div>
                            <div>
                                <label>Email:</label>
                                <input type="text" @bind="newUser.Email" class="form-control" />
                            </div>
                            <div>
                                <button class="btn btn-success" @onclick="SaveUser">Save Changes</button>
                                <button class="btn btn-secondary" @onclick="CancelEditUser">Cancel</button>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private List<User> users;
    private User newUser = new User();
    private User editingUser;
    private bool isAddFormVisible = false;

    protected override void OnInitialized()
    {
        users = LibraryService.GetUsers();
    }

    // Toggle visibility of Add User form
    private void ToggleAddForm()
    {
        isAddFormVisible = !isAddFormVisible;
        if (!isAddFormVisible)
        {
            ClearForm();  // Reset form when hidden
        }
    }

    // Add a new user
    private void AddUser()
    {
        LibraryService.AddUser(newUser);
        ClearForm();  // Reset the form after adding
    }

    // Save the edited user
    private void SaveUser()
    {
        LibraryService.EditUser(newUser.Id, newUser);
        ClearForm();  // Reset the form after saving
    }

    // Start editing a user
    private void StartEditingUser(User user)
    {
        editingUser = user;
        newUser = new User
            {
                Id = user.Id,
                Name = user.Name,
                Email = user.Email
            };
    }

    // Cancel editing and reset the form
    private void CancelEditUser()
    {
        ClearForm();
    }

    // Cancel adding a user and reset the form
    private void CancelAddUser()
    {
        ClearForm();
    }

    // Delete a user
    private void DeleteUser(int id)
    {
        LibraryService.DeleteUser(id);
        users = LibraryService.GetUsers(); // Refresh the list after deletion
    }

    // Reset the form fields
    private void ClearForm()
    {
        newUser = new User(); // Reset form fields
        editingUser = null; // Clear the editing state
        isAddFormVisible = false; // Hide the add form
        users = LibraryService.GetUsers(); // Refresh the users list
    }
}

